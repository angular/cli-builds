{
  "name": "build",
  "description": "Compiles an Angular app into an output directory named dist/ at the given output path. Must be executed from within a workspace directory.",
  "longDescription": "The command can be used to build a project of type \"application\" or \"library\".\nWhen used to build a library, a different builder is invoked, and only the `ts-config`, `configuration`, and `watch` options are applied.\nAll other options apply only to building applications.\n\nThe application builder uses the [webpack](https://webpack.js.org/) build tool, with default configuration options specified in the workspace configuration file (`angular.json`) or with a named alternative configuration.\nA \"development\" configuration is created by default when you use the CLI to create the project, and you can use that configuration by specifying the `--configuration development`.\n\nThe configuration options generally correspond to the command options.\nYou can override individual configuration defaults by specifying the corresponding options on the command line.\nThe command can accept option names given in either dash-case or camelCase.\nNote that in the configuration file, you must specify names in camelCase.\n\nSome additional options can only be set through the configuration file,\neither by direct editing or with the `ng config` command.\nThese include `assets`, `styles`, and `scripts` objects that provide runtime-global resources to include in the project.\nResources in CSS, such as images and fonts, are automatically written and fingerprinted at the root of the output folder.\n\nFor further details, see [Workspace Configuration](guide/workspace-config).\n",
  "options": [
    {
      "name": "project",
      "description": "The name of the project to build. Can be an application or a library.",
      "type": "string",
      "required": false,
      "aliases": [],
      "hidden": false,
      "positional": 0
    },
    {
      "name": "configuration",
      "description": "One or more named builder configurations as a comma-separated list as specified in the \"configurations\" section of angular.json.\nThe builder uses the named configurations to run the given target.\nFor more information, see https://angular.io/guide/workspace-config#alternate-build-configurations.\nSetting this explicitly overrides the \"--prod\" flag.",
      "type": "string",
      "required": false,
      "aliases": [
        "c"
      ],
      "hidden": false
    },
    {
      "name": "prod",
      "description": "Shorthand for \"--configuration=production\".\nSet the build configuration to the production target.\nBy default, the production target is set up in the workspace configuration such that all builds make use of bundling, limited tree-shaking, and also limited dead code elimination.",
      "type": "boolean",
      "required": false,
      "aliases": [],
      "hidden": false,
      "deprecated": "Use `--configuration production` instead."
    },
    {
      "name": "help",
      "description": "Shows a help message for this command in the console.",
      "type": "boolean",
      "types": [
        "boolean",
        "string"
      ],
      "default": false,
      "enum": [
        true,
        false,
        "json",
        "JSON"
      ],
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "main",
      "description": "The full path for the main entry point to the app, relative to the current workspace.",
      "type": "string",
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "polyfills",
      "description": "The full path for the polyfills file, relative to the current workspace.",
      "type": "string",
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "ts-config",
      "description": "The full path for the TypeScript configuration file, relative to the current workspace.",
      "type": "string",
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "optimization",
      "description": "Enables optimization of the build output. Including minification of scripts and styles, tree-shaking, dead-code elimination, inlining of critical CSS and fonts inlining. For more information, see https://angular.io/guide/workspace-config#optimization-configuration.",
      "type": "boolean",
      "default": false,
      "required": false,
      "aliases": [],
      "hidden": false,
      "userAnalytics": 16
    },
    {
      "name": "output-path",
      "description": "The full path for the new output directory, relative to the current workspace.\n\nBy default, writes output to a folder named dist/ in the current project.",
      "type": "string",
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "resources-output-path",
      "description": "The path where style resources will be placed, relative to outputPath.",
      "type": "string",
      "default": "",
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "aot",
      "description": "Build using Ahead of Time compilation.",
      "type": "boolean",
      "default": false,
      "required": false,
      "aliases": [],
      "hidden": false,
      "userAnalytics": 13
    },
    {
      "name": "source-map",
      "description": "Output source maps for scripts and styles. For more information, see https://angular.io/guide/workspace-config#source-map-configuration.",
      "type": "boolean",
      "default": true,
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "vendor-chunk",
      "description": "Generate a seperate bundle containing only vendor libraries. This option should only used for development.",
      "type": "boolean",
      "default": true,
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "common-chunk",
      "description": "Generate a seperate bundle containing code used across multiple bundles.",
      "type": "boolean",
      "default": true,
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "base-href",
      "description": "Base url for the application being built.",
      "type": "string",
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "deploy-url",
      "description": "URL where files will be deployed.",
      "type": "string",
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "verbose",
      "description": "Adds more details to output logging.",
      "type": "boolean",
      "default": false,
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "progress",
      "description": "Log progress to the console while building.",
      "type": "boolean",
      "default": true,
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "i18n-missing-translation",
      "description": "How to handle missing translations for i18n.",
      "type": "string",
      "default": "warning",
      "enum": [
        "warning",
        "error",
        "ignore"
      ],
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "localize",
      "description": "Translate the bundles in one or more locales.",
      "type": "boolean",
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "extract-css",
      "description": "Extract CSS from global styles into '.css' files instead of '.js'.",
      "type": "boolean",
      "default": true,
      "required": false,
      "aliases": [],
      "hidden": false,
      "deprecated": "Deprecated since version 11.0. No longer required to disable CSS extraction for HMR."
    },
    {
      "name": "watch",
      "description": "Run build when files change.",
      "type": "boolean",
      "default": false,
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "output-hashing",
      "description": "Define the output filename cache-busting hashing mode.",
      "type": "string",
      "default": "none",
      "enum": [
        "none",
        "all",
        "media",
        "bundles"
      ],
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "poll",
      "description": "Enable and define the file watching poll time period in milliseconds.",
      "type": "number",
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "delete-output-path",
      "description": "Delete the output path before building.",
      "type": "boolean",
      "default": true,
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "preserve-symlinks",
      "description": "Do not use the real path when resolving modules. If unset then will default to `true` if NodeJS option --preserve-symlinks is set.",
      "type": "boolean",
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "extract-licenses",
      "description": "Extract all licenses in a separate file.",
      "type": "boolean",
      "default": false,
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "show-circular-dependencies",
      "description": "Show circular dependency warnings on builds.",
      "type": "boolean",
      "default": false,
      "required": false,
      "aliases": [],
      "hidden": false,
      "deprecated": "The recommended method to detect circular dependencies in project code is to use a either a lint rule or other external tooling."
    },
    {
      "name": "build-optimizer",
      "description": "Enables '@angular-devkit/build-optimizer' optimizations when using the 'aot' option.",
      "type": "boolean",
      "default": false,
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "named-chunks",
      "description": "Use file name for lazy loaded chunks.",
      "type": "boolean",
      "default": true,
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "subresource-integrity",
      "description": "Enables the use of subresource integrity validation.",
      "type": "boolean",
      "default": false,
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "service-worker",
      "description": "Generates a service worker config for production builds.",
      "type": "boolean",
      "default": false,
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "ngsw-config-path",
      "description": "Path to ngsw-config.json.",
      "type": "string",
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "index",
      "description": "Configures the generation of the application's HTML index.",
      "type": "string",
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "stats-json",
      "description": "Generates a 'stats.json' file which can be analyzed using tools such as 'webpack-bundle-analyzer'.",
      "type": "boolean",
      "default": false,
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "fork-type-checker",
      "description": "Run the TypeScript type checker in a forked process.",
      "type": "boolean",
      "default": true,
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "web-worker-ts-config",
      "description": "TypeScript configuration for Web Worker modules.",
      "type": "string",
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "cross-origin",
      "description": "Define the crossorigin attribute setting of elements that provide CORS support.",
      "type": "string",
      "default": "none",
      "enum": [
        "none",
        "anonymous",
        "use-credentials"
      ],
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "allowed-common-js-dependencies",
      "description": "A list of CommonJS packages that are allowed to be used without a build time warning.",
      "type": "array",
      "required": false,
      "aliases": [],
      "hidden": false
    }
  ],
  "aliases": [
    "b"
  ],
  "scope": "in",
  "hidden": false
}